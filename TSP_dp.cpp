#include <iostream>
#include <vector>
#include <climits>

using namespace std;

const int N = 20;
vector<vector<int>> expense = {
    {0, 12, 29, 22, 13, 24, 11, 30, 22, 15, 16, 28, 19, 21, 23, 17, 20, 14, 18, 25},
    {12, 0, 21, 17, 31, 23, 15, 26, 19, 11, 14, 27, 18, 22, 24, 20, 19, 13, 16, 28},
    {29, 21, 0, 23, 20, 18, 25, 32, 27, 22, 21, 24, 28, 26, 30, 29, 19, 15, 17, 31},
    {22, 17, 23, 0, 16, 27, 14, 18, 20, 25, 19, 22, 26, 30, 24, 28, 21, 23, 15, 29},
    {13, 31, 20, 16, 0, 14, 19, 24, 22, 28, 26, 15, 18, 27, 30, 25, 23, 21, 29, 17},
    {24, 23, 18, 27, 14, 0, 31, 26, 28, 19, 25, 17, 29, 21, 22, 16, 30, 27, 20, 18},
    {11, 15, 25, 14, 19, 31, 0, 28, 17, 16, 30, 24, 26, 21, 29, 27, 22, 23, 18, 20},
    {30, 26, 32, 18, 24, 26, 28, 0, 25, 29, 15, 17, 21, 31, 23, 22, 27, 20, 30, 19},
    {22, 19, 27, 20, 22, 28, 17, 25, 0, 16, 19, 30, 21, 23, 14, 26, 18, 24, 27, 31},
    {15, 11, 22, 25, 28, 19, 16, 29, 16, 0, 14, 17, 23, 18, 21, 24, 26, 22, 19, 30},
    {16, 14, 21, 19, 26, 25, 30, 15, 19, 14, 0, 22, 24, 28, 17, 20, 27, 23, 29, 18},
    {28, 27, 24, 22, 15, 17, 24, 17, 30, 17, 22, 0, 29, 18, 27, 21, 25, 19, 14, 26},
    {19, 18, 28, 26, 18, 29, 26, 21, 21, 23, 24, 29, 0, 15, 30, 17, 28, 16, 31, 22},
    {21, 22, 26, 30, 27, 21, 21, 31, 23, 18, 28, 18, 15, 0, 25, 19, 14, 27, 20, 24},
    {23, 24, 30, 24, 30, 22, 29, 23, 14, 21, 17, 27, 30, 25, 0, 16, 26, 18, 28, 15},
    {17, 20, 29, 28, 25, 16, 27, 22, 26, 24, 20, 21, 17, 19, 16, 0, 22, 28, 30, 29},
    {20, 19, 19, 21, 23, 30, 22, 27, 18, 26, 27, 25, 28, 14, 26, 22, 0, 30, 17, 16},
    {14, 13, 15, 23, 21, 27, 23, 20, 24, 22, 23, 19, 16, 27, 18, 28, 30, 0, 21, 24},
    {18, 16, 17, 15, 29, 20, 18, 30, 27, 19, 29, 14, 31, 20, 28, 30, 17, 21, 0, 22},
    {25, 28, 31, 29, 17, 18, 20, 19, 31, 30, 18, 26, 22, 24, 15, 29, 16, 24, 22, 0}
};

vector<vector<int>> dp(1 << N, vector<int>(N, -1));

int tsp(int mask, int pos) {
    if (mask == (1 << N) - 1) return expense[pos][0];
    if (dp[mask][pos] != -1) return dp[mask][pos];

    int ans = INT_MAX;
    for (int city = 0; city < N; city++) {
        if ((mask & (1 << city)) == 0) {
            int newAns = expense[pos][city] + tsp(mask | (1 << city), city);
            ans = min(ans, newAns);
        }
    }
    return dp[mask][pos] = ans;
}

int main() {
    cout << "Chi phí nhỏ nhất của chu trình Hamilton: " << tsp(1, 0) << endl;
    return 0;
}
